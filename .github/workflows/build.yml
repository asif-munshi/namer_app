name: Build Final Flutter App

on: workflow_dispatch

jobs:
  build_windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.13.0
        with:
          channel: stable  # Use stable channel instead of main
          
      - run: flutter --version  # Verify Flutter version
      - run: flutter pub get

      - run: mkdir -p build/windows/x64/runner/Release
      - run: flutter build windows --release
      - name: List Windows Build Directory
        run: dir build/windows/x64/runner/Release
      - name: zip everything
        run: |
          cd build/windows/x64/runner/Release
          Compress-Archive -Path * -DestinationPath namer-windows.zip
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: windows-zip
          path: build/windows/x64/runner/Release/namer-windows.zip

  build_linux:
    name: Build Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.13.0
        with:
          channel: stable  # Use stable channel instead of main
          
      - run: flutter --version  # Verify Flutter version
      - run: sudo apt-get update
      - run: sudo apt-get install -y ninja-build cmake libgtk-3-dev
      - run: flutter pub get

      - run: mkdir -p build/linux/x64/release/bundle
      - run: flutter build linux --release
      - name: List Linux Build Directory
        run: ls -alh build/linux/x64/release/bundle
      - name: zip everything
        run: |
          cd build/linux/x64/release/bundle
          zip -r namer.zip *
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: linux-zip
          path: build/linux/x64/release/bundle/namer.zip

  upload-release:
    permissions: write-all
    needs: [build_linux, build_windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //' | tr -d ' ')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Download Windows ZIP
        uses: actions/download-artifact@v4
        with:
          name: windows-zip
          path: ./out/windows

      - name: Download Linux ZIP
        uses: actions/download-artifact@v4
        with:
          name: linux-zip
          path: ./out/linux

      - name: List output directory
        run: ls -R ./out

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          files: |
            ./out/windows/namer-windows.zip
            ./out/linux/namer.zip
          tag_name: v${{ steps.version.outputs.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false